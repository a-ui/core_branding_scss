/**
 * NAVIGATION MENU VARIABLES
 * -------------------------------------------------------------------
 * This component has shared variables with _organisms.header.scss. You can find them in _quarks.css-properties.scss.
 */

.o-menu {
  --navigation-menu-border-color:      var(--BORDER-COLOR);
  --navigation-menu-mobile-height:     var(--SPACER-XXL);
  --navigation-menu-pane-width:        20rem;
  --navigation-menu-undocked-width:    15rem;
  --navigation-menu-docked-width:      var(--shared-header-height);
  --navigation-menu-submenu-inset:     var(--SPACER-XS);
  --navigation-menu-submenu-height:    calc(var(--navigation-menu-undocked-width) * 2);
  --navigation-menu-animation-speed:   var(--ANIMATION-DURATION);
}

/**
 * NAVIGATION MENU
 * -------------------------------------------------------------------
 */

.o-menu {
  background: $white;
  width: 100%;
  z-index: layer('pane');

  @include at($screen-sm) {
    border-right: var(--BORDER-WIDTH) solid var(--navigation-menu-border-color);
    min-width: var(--navigation-menu-undocked-width);
    overflow-x: hidden; // By default, don't show overflowing content
    overflow-y: auto;
    position: initial;
    top: 0;
    transition: width min-width var(--ANIMATION-EASING) var(--navigation-menu-animation-speed);
    width: var(--navigation-menu-undocked-width);

    a {
      border: none;
    }

    &.is-docked {
      min-width: var(--navigation-menu-docked-width);
      overflow: visible; // Since when docked the submenu's will appear to the right, show the overflowing content
      width: var(--navigation-menu-docked-width);

      .o-menu__tabs-wrapper {
        box-shadow: none;
      }

      .o-menu__tab {
        width: calc(var(--navigation-menu-docked-width) - var(--BORDER-WIDTH)); // 1 px make up for border

        .o-menu__tab-wrapper:not(.is-active) {
          overflow: hidden;
        }
      }

      .o-menu__submenu {
        left: var(--navigation-menu-docked-width);
        position: absolute;
        top: calc(var(--BORDER-WIDTH) * -1); // Make up for border

        .o-menu__submenu {
          left: 100%;
        }

        .o-menu__submenu-content-wrapper {
          box-shadow: var(--BOX-SHADOW);
          max-height: inherit;
          transition: width var(--ANIMATION-EASING);
          width: 0;

          .o-menu__submenu-list {
            border: var(--BORDER-WIDTH) solid var(--navigation-menu-border-color);
            border-bottom: none;
            border-left: none;

            .o-menu__submenu-list {
              border-left: var(--BORDER-WIDTH) solid var(--navigation-menu-border-color);
            }

            li {
              .o-menu__icon {
                transform: rotate(-90deg);
              }

              a {
                border-bottom: var(--BORDER-WIDTH) solid var(--navigation-menu-border-color);
                padding-left: var(--SPACER-XS);
              }
            }
          }
        }

        .o-menu__submenu-content-wrapper {
          width: var(--navigation-menu-undocked-width);
        }
      }
    }
  }
}

.o-menu .o-menu__link,
.o-menu .o-menu__submenu-list a {
  white-space: nowrap;

  &,
  &:active,
  &:link,
  &:hover {
    color: var(--TEXT-COLOR-LIGHT);
    text-decoration: none;
  }
}

.o-menu > .o-menu__tabs-wrapper {
  align-content: space-between;
  align-items: center;
  background: $white;
  border-top: var(--BORDER-WIDTH) solid var(--navigation-menu-border-color);
  display: flex;
  position: relative;
  width: 100%;
  z-index: layer('header');

  // Only display the first 2 items on a mobile screen
  // and ignore the last element, since it will show a 'more...' menu tab
  & > .o-menu__tab:nth-child(n + 3) {
    &:not(:last-child) {
      display: none; //We will need to  display the 'more...' tab

      @include at($screen-sm) {
        display: block; // Just display all on desktop since we will have enough space
      }
    }

    &:last-child {
      display: block;

      @include at($screen-sm) {
        display: none; // Don't display the 'more' tab on desktop
      }
    }
  }

  @include at($screen-sm) {
    flex-direction: column;
    height: auto;
    width: auto;
    z-index: layer('pane-overlay');
  }
}

.o-menu .o-menu__tab {
  border-right: var(--BORDER-WIDTH) solid var(--navigation-menu-border-color);
  cursor: pointer;
  flex-basis: 33%;
  flex-grow: 1;
  height: 100%;
  position: relative;
  width: 33%;

  &:last-child {
    border-right: none;
  }

  &.is-active {
    .o-menu__tab-wrapper {
      overflow-y: auto;
    }

    .o-menu__submenu-icon {
      transform: rotate(180deg);
    }

    & > .o-menu__tab-wrapper > .o-menu__submenu > .o-menu__submenu-content-wrapper:first-of-type {
      display: block;
      max-height: var(--navigation-menu-submenu-height);
      overflow: visible;
    }
  }

  @include at($screen-sm) {
    border-bottom: var(--BORDER-WIDTH) solid var(--navigation-menu-border-color);
    border-right: none;
    width: 100%;
  }

  & > .o-menu__tab-wrapper {
    overflow: hidden;

    & > .o-menu__tab-header {
      align-items: center;
      color: var(--TEXT-COLOR-LIGHT);
      display: flex;
      flex-direction: column;
      font-weight: bold;
      height: var(--navigation-menu-mobile-height);
      justify-content: center;
      text-decoration: none;
      transition-duration: var(--ANIMATION-DURATION);
      transition-property: background, color;
      transition-timing-function: var(--ANIMATION-EASING);

      // Support for a margin for iPhone X
      @supports (margin-bottom: env(safe-area-inset-bottom)) {
        margin-bottom: env(safe-area-inset-bottom);
      }

      &:hover,
      &:active,
      &:hover {
        background-color: var(--BG-COLOR);
        color: var(--TEXT-COLOR-LIGHT);
      }

      .o-menu__tab-title {
        align-items: center;
        display: flex;
        flex-direction: column;
        text-align: center;
      }

      .o-menu__icon {
        font-size: rem($icon-size-base);
        margin-bottom: var(--SPACER-XXS);

        &.o-menu__tab-icon {
          width: rem($icon-size-lg);
        }

        &.o-menu__submenu-icon {
          display: none;
          font-size: rem($font-size-base);
          transition: transform var(--navigation-menu-animation-speed) ease;

          @include at($screen-sm) {
            display: inline;
          }
        }

        @include at($screen-sm) {
          margin-bottom: 0;
        }
      }

      @include at($screen-sm) {
        align-items: center;
        flex-direction: row;
        height: var(--shared-header-height);
        justify-content: space-between;
        padding: .625rem;
        position: relative;

        .o-menu__link {
          margin-left: var(--SPACER-S);
        }

        .o-menu__tab-title {
          align-items: center;
          display: flex;
          flex-direction: row;
        }
      }
    }
  }
}

.o-menu .o-menu__submenu {
  display: none;

  .u-cursor-pointer {
    cursor: pointer;
  }

  .o-menu__submenu-content-wrapper {
    background: $white;
    display: none;
    max-height: 0;
    overflow: hidden;
    transition: max-height var(--ANIMATION-EASING) var(--navigation-menu-animation-speed);

    .o-menu__submenu-list {
      border: none;

      li {
        position: relative;
      }

      li > a {
        border: none;
        color: var(--TEXT-COLOR-LIGHT);
        display: flex;
        justify-content: space-between;
        overflow: hidden;
        white-space: nowrap;

        @include at($screen-sm) {
          // Padding is parent padding + icon size + header padding to the left to align the link to the header text
          padding-left: calc(var(--navigation-menu-docked-width) + var(--navigation-menu-submenu-inset));
          padding-right: var(--SPACER-3XS);

          a {
            border: none;
          }
        }
      }

      li > a > .o-menu__icon {
        transform: rotate(0deg);
      }
    }

    @include at($screen-sm) {
      li > a > .o-menu__icon {
        margin-right: var(--SPACER-3XS);
        transform: rotate(0deg);
        transition: transform var(--navigation-menu-animation-speed) var(--ANIMATION-EASING);
      }

      li.is-active {
        & > .o-menu__submenu > .o-menu__submenu-content-wrapper {
          display: block;
          max-height: var(--navigation-menu-submenu-height);
          overflow: visible;
        }

        & > a > .o-menu__icon {
          transform: rotate(180deg);
        }
      }
    }
  }

  // First sub-layer of menus will get larger padding
  & .o-menu__submenu-list li .o-menu__submenu li > a {
    padding-left: calc(var(--navigation-menu-docked-width) + var(--navigation-menu-submenu-inset) * 2);
  }

  @include at($screen-sm) {
    display: block;
  }
}

.o-menu__submenu-list {
  @extend %u-list-reset;

  border-top: var(--BORDER-WIDTH) solid var(--navigation-menu-border-color);

  > li {
    font-weight: var(--FONT-WEIGHT-BOLD);
    line-height: var(--LINE-HEIGHT-PARAGRAPH);
    text-align: center;

    > a,
    > button {
      align-items: center;
      background: $white;
      border: none;
      border-bottom: var(--BORDER-WIDTH) solid var(--navigation-menu-border-color);
      color: inherit;
      display: flex;
      flex: 1 1 auto;
      min-height: calc(var(--SPACER-XL) + var(--BORDER-WIDTH));
      text-decoration: none;
      transition-duration: var(--ANIMATION-DURATION);
      transition-property: background, color;
      transition-timing-function: var(--ANIMATION-EASING);

      &:hover,
      &:active {
        background-color: $gray-100;
      }

      > .ai {
        display: inline-block;
        margin-right: var(--SPACER-XS);
      }
    }

    > button {
      cursor: pointer;
      width: 100%;
    }
  }
}

.o-menu > .o-menu__hide-cta {
  display: none;

  @include at($screen-sm) {
    display: block;
    padding: 1rem var(--SPACER-XS);
    text-align: right;

    > a {
      text-decoration: none;
    }
  }
}

.o-menu > .o-menu__navigation-pane {
  background: $white;
  max-height: calc(100vh - var(--navigation-menu-mobile-height));
  position: absolute;
  top: 0;
  transition: transform var(--navigation-menu-animation-speed) ease;
  width: 100%;
  z-index: layer('header') - 1;

  .o-navigation-pane__overlay {
    background: var(--OVERLAY-COLOR);
    bottom: 100%;
    height: 0;
    opacity: 0;
    position: absolute;
    transition: opacity calc(#{var(--navigation-menu-animation-speed)} * 2) ease;
    width: 100vh;
  }

  .o-navigation-pane__wrapper {
    background: $white;
    box-shadow: 0 -.75rem 0 var(--BOX-SHADOW-COLOR);
    margin-bottom: calc(var(--BORDER-WIDTH) * -1);
    max-height: calc(100vh - var(--shared-header-height) - var(--navigation-menu-mobile-height));
    min-height: var(--SPACER); // make up for the box shadow to be visible, even when hidden
    overflow-y: scroll;
    position: relative;
  }

  .o-menu__main-submenu,
  .o-menu__slide-in-submenu {
    .o-menu__back-link {
      color: var(--TEXT-COLOR-LIGHT);
      font-weight: normal;
    }

    li > a > .o-menu__icon {
      float: right;
      transform: rotate(-90deg);
    }
  }

  .o-menu__slide-in-submenu {
    background: $white;
    bottom: 0;
    height: 0;
    left: 0;
    overflow: hidden;
    position: absolute;
    transform: translateX(100%);
    transition: transform var(--navigation-menu-animation-speed) ease;
    width: 100%;

    &.is-visible {
      height: auto;
      overflow: inherit;
      transform: translateX(0);
    }
  }

  &.is-visible {
    transform: translateY(-100%);

    & > .o-navigation-pane__overlay {
      min-height: 100vh;
      opacity: .8;
    }
  }

  @include at($screen-sm) {
    display: none;
  }
}
